@inject IJSRuntime JSRuntime;
@inject WellViewModel WellViewModel;

@using BlazorServerLASViewer.Domains.Well;

<h3>Well as SVG view</h3>
<div>OverChild: @WellViewModel.OverChild</div>

<div>Cursor Position: @WellViewModel.ContainerMouseX,@WellViewModel.ContainerMouseY</div>

<div>
    Element Id:
    @if (WellViewModel.SelectedItem > -1)
    {
        @WellViewModel.SelectedItem <span> Element Position:</span> @WellViewModel.ElementX <span>,</span>@WellViewModel.ElementY
    }
    else
    {
        <span>none</span>
    }
</div>

<svg @onmousemove="@MouseMove"
     class="WellSVG"
     width="@WellViewModel.WellWidth"
     height="@WellViewModel.WellHeight"
     style="background:rgb(@WellViewModel.WellRedComponent,@WellViewModel.WellGreenComponent,@WellViewModel.WellBlueComponent)">
    @foreach (var log in WellViewModel.Logs)
    {
        <LogSvg log="@log" ChangeSelected="@ChangeSelected"> </LogSvg>
    }
</svg>

@code {

    public void MouseMove(MouseEventArgs e)
    {
        WellViewModel.ContainerMouseX = (int)e.ClientX - WellViewModel.ContainerX;
        WellViewModel.ContainerMouseY = (int)e.ClientY - WellViewModel.ContainerY;

        if (WellViewModel.SelectedItem > -1)
        {
            var logSvgViewRectangle = WellViewModel.Logs[WellViewModel.SelectedItem - 1].SvgViewRectangle;
            var x = WellViewModel.ContainerMouseX - logSvgViewRectangle.OriginalX;
            var y = WellViewModel.ContainerMouseY - logSvgViewRectangle.OriginalY;

            logSvgViewRectangle.X = x;
            logSvgViewRectangle.Y = y;

            WellViewModel.ElementX = x;
            WellViewModel.ElementY = y;

        }
    }

    public async void ChangeSelected(string newselected)
    {
        //Set an SVG <g> Element over Top in the <svg>
        //method contained in _Host.cshtml
        await JSRuntime.InvokeAsync<string>("PlaceOnTop", new object[] { newselected });
        base.StateHasChanged();
    }

    //This is called after OnInitialized
    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            //Get SVG Position and Pass to the ViewModel
            //method contained in _Host.cshtml
            var raw = await JSRuntime.InvokeAsync<decimal[]>("ContainerPos", null);
            WellViewModel.ContainerX = (int)raw[0];
            WellViewModel.ContainerY = (int)raw[1];
        }
        base.OnAfterRender(firstRender);
    }
}
